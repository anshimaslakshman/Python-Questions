
'''Write a python program to create a list of squares for the numbers from 0 to 9
using list comprehension.'''

a=list(range(10))
l=[]
for i in a:
    r=i*i
    l.append(r)
print(l)
s=[i**2 for i in range(10)]
print(s)
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
#Write a user-defined function to generate even numbers between 1 and 25.

def even(n):
    for i in range (1,n+1):
        if i %2==0:
            print(i,end=" ")
even(25)
2 4 6 8 10 12 14 16 18 20 22 24 
'''Create a Python program that uses a dictionary to store the names and ages of
people. Ask the user to enter a name, and the program should display the age of
that person.'''

n={"harry":30,"bob":45}
i=input("enter name")
if i in n:
    print(f"the age of {i} is: {n[i]}")
the age of bob is: 45
#Write a Python program to print all palindromes in a line of text.

s="heelo malayalam bob madam hello"
sq=s.split()
l=[]
for i in sq:
    i=i.lower()
    if i==i[::-1]:
        l.append(i)
if l==[]:
    print("empty")       
else: 
 print(l) 
['malayalam', 'bob', 'madam']
"""Write a Python program to compute the sum of the series (1- x^2/2! +x^4/4!....x^6/6!+..........n terms)."""

import math

def series_sum(x, n):
    sum_series = 1  
    sign = -1 
    for i in range(2, 2 * n, 2):  
        sum_series += sign * (x ** i) / math.factorial(i)
        sign *= -1  

    return sum_series
x = float(input("Enter the value of x: "))
n = int(input("Enter the number of terms (n): "))

result = series_sum(x, n)
print(f"Sum of the series for x = {x} and n = {n} terms: {result}")
Sum of the series for x = 5.0 and n = 5 terms: 2.528397817460318
#Write a Python program to convert a decimal number to its binary equivalent.

n=int(input("enter the decimal number"))
b=""
while n>0:
    b=str(n%2) +b
    n=n//2
print(b)
111
"""Write a Python program to read a text file and store the count of occurrences of
each character in a dictionary."""

file=open("hello.txt","r")
count={}
for line in file:
    for char in line:
        count[char]=count.get(char,0)+1
file.close()
print(count)
#for char,count in count.items():
  #  print(f"'{char}' : {count}")
{'h': 2, 'e': 2, 'l': 2, 'o': 3, ' ': 3, 'w': 1, 'a': 1, 'r': 1, 'y': 1, 'u': 1}
#Write a recursive function in python to find GCD of two numbers.

def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

num1 = int(input("Enter the first number: "))
num2 = int(input("Enter the second number: "))
print(f"The GCD of {num1} and {num2} is: {gcd(num1, num2)}")
The GCD of 12 and 26 is: 2
"""Assume that the variable data refers to the string "Python rules!".use a string
method to perform the following tasks:
a. Obtain a list of the words in the string.
b. Convert the string to uppercase.
c. Locate the position of the string "rules" .
d. Replace the exclamation point with a question mark."""

s="Python rules!"
print(s.split())
print(s.upper())
print(s.find("rules"))
print(s.replace("!","?"))
['Python', 'rules!']
PYTHON RULES!
7
Python rules?
"""Write a code segment that opens a file for input and prints the number of four-
letter words in the file"""

file=open("hello.txt","r")
count=1
for line in file:
    words=line.split()
    for word in words:
        if len(word)==4:
            count+=1
file.close()
print(count)
1
"""Assume that there is a text file named"hello.txt.Write a python program to
find the median of list of numbers in the file without using standard function for
median."""
file=open("number.txt","r")
n=[int(x) for x in file.read().split()]
file.close()
n.sort()
num=len(n)
if num%2==1:
    m=n[num//2]
else:
    m=(n[num//2-1]+n[num//2])/2
print(m)
3
"""Use higher order python function filter to extract a list of positive numbers from
a given list of numbers. You should use a lambda to create the auxiliary function."""

n=[-2,-4,5,-6,6,-5,-4]
p=list(filter(lambda x:x>0,n))
print(p)
[5, 6]
"""Write a Python program to implement Caesar cipher encryption and decryption
on a string of lowercase letters. Take distance value and the string as input. (Hint:
Caesar cipher encryption strategy replaces each character in the plaintext with the
character that occurs a given distance away in the sequence."""

def caesar_cipher(text, shift):
    encrypted_text = ""
    for char in text:
        if 'a' <= char <= 'z':  
            encrypted_text += chr(((ord(char) - ord('a') + shift) % 26) + ord('a'))
        else:
            encrypted_text += char  
    return encrypted_text

def caesar_decipher(text, shift):
    return caesar_cipher(text, -shift)  

text = input("Enter the string to encrypt: ").lower()
shift = int(input("Enter the shift value: "))

encrypted = caesar_cipher(text, shift)
decrypted = caesar_decipher(encrypted, shift)

print("Encrypted:", encrypted)
print("Decrypted:", decrypted)
Encrypted: lqydgh
Decrypted: invade
"""Write a Python program to check whether a list contains a sublist.
Eg. Input 1: my_list = [3,4,5,2,7,8] , sub_list = [2,7]
output 1: True
input 2: my_list = [3,4,5,2,7,8] , sub_list = [5,7]
output 2: False
"""
def is_sublist(main_list, sub_list):
    for i in range(len(main_list) - len(sub_list) + 1):
        if main_list[i:i + len(sub_list)] == sub_list:
            return True
    return False
my_list = [3, 4, 5, 2, 7, 8]
sub_list1 = [2, 7]
sub_list2 = [5, 7]

print(is_sublist(my_list, sub_list1))  
print(is_sublist(my_list, sub_list2))  
True
False
"""Write Python code for the following statements
i)writes the text "PROGRAMMING IN PYTHON" to a file with name code.txt
ii) then reads the text again and prints it to the screen."""

file=open("code.txt","w")
file.write("PROGRAMMING IN PYTHON")
file.close()
read=open("code.txt","r")
for line in read:
    print(line)
PROGRAMMING IN PYTHON
"""Write a Python program to count how many times each character appears in a
given string and store the count in a dictionary with key as the character."""

s="hello world"
count={}
for i in s:
    if i in count:
        count[i]+=1
    else:
        count[i]=1
print(count)
{'h': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'w': 1, 'r': 1, 'd': 1}
"""Create a function min_max() that takes n numbers as list argument and return the
smallest and largest numbers."""

def min_max(n):
    min=n[0]
    max=n[0]
    for i in n:
        if i<min:
            min=i
        if i>max:
            max=i
    return min,max

n=[3,56,3,5,23,4]
min,max=min_max(n)
print(f"the smallest number is {min}\nthe largest number is {max}")
the smallest number is 3
the largest number is 56
"""Write a Python program to read n integers into a list and separate the positive
and negative numbers into two different lists."""

n=list(map(int,input().split()))
p=[]
neg=[]
for i in n:
    if i>=0:
        p.append(i)
    else:
        neg.append(i)
print(f"the positive numbers are {p}\nthe negative numbers are {neg}")
the positive numbers are [5, 6, 4, 7]
the negative numbers are [-9, -2, -4]
"""Create a dictionary of names and birthdays. Write a Python program that asks
the user to enter a name, and the program display the birthday of that person."""


n={"harry":"30 march","bob":"13 june"}
i=input("enter name")
if i in n:
    print(f"the birthday of {i} is: {n[i]}")
the birthday of bob is: 13 june